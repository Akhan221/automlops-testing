name: AutoMLOps CI Workflow

on:
  push:
    branches:
      - main
      - 'github-integration'
  pull_request:
    branches:
      - main
  merge_group:
    branches:
      - main

jobs:
  test:
    # Official language image. Look for the different tagged releases at:
    # https://hub.docker.com/r/library/python/tags
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Check for licenses
      run: |
        ./license_check.sh
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r requirements.txt

    - name: Print Environment Variables (Before Auth)
      run: |
        env | sort

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        token_format: 'access_token'
        workload_identity_provider: 'projects/1063498356496/locations/global/workloadIdentityPools/integration-testing-pool/providers/github'
        service_account: '1063498356496-compute@developer.gserviceaccount.com'
        project_id: 'airflow-sandbox-392816'
        
    # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Unset Conflicting Variables 
      run: |  
        unset CLOUDSDK_CORE_PROJECT 
        unset CLOUDSDK_PROJECT
        unset GCLOUD_PROJECT
        unset GCP_PROJECT
        unset GOOGLE_CLOUD_PROJECT


    - name: Explicitly Set Project
      run: gcloud config set project 'airflow-sandbox-392816'

    # Now you can run gcloud commands authenticated as the impersonated service account.
    - id: 'gcloud'
      name: 'test auth by listing project name'
      run: |-
        gcloud config list

    - run: echo "This job's status is ${{ job.status }}."
    - name: Run integration tests
      working-directory: tests/integration
      run: |
        pytest 
