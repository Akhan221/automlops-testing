# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# DISCLAIMER: This code is generated as part of the AutoMLOps output.

steps:
# ==============================================================================
# BUILD & PUSH CUSTOM COMPONENT IMAGES
# ==============================================================================

  # build the component_base image
  - name: "gcr.io/cloud-builders/docker"
    args: [ "build", "-t", "us-central1-docker.pkg.dev/automlops-sandbox/vertex-mlops-af/components/component_base:latest", "." ]
    dir: "AutoMLOps/components/component_base"
    id: "build_component_base"
    waitFor: ["-"]

  # push the component_base image
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "us-central1-docker.pkg.dev/automlops-sandbox/vertex-mlops-af/components/component_base:latest"]
    dir: "AutoMLOps/components/component_base"
    id: "push_component_base"
    waitFor: ["build_component_base"]

# ==============================================================================
# BUILD & PUSH CLOUD RUN IMAGES
# ==============================================================================

  # build the run_pipeline image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ "build", "-t", "us-central1-docker.pkg.dev/automlops-sandbox/vertex-mlops-af/run_pipeline:latest", "-f", "cloud_run/run_pipeline/Dockerfile", "." ]
    dir: "AutoMLOps/"
    id: "build_pipeline_runner_svc"
    waitFor: ['push_component_base']

  # push the run_pipeline image
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "us-central1-docker.pkg.dev/automlops-sandbox/vertex-mlops-af/run_pipeline:latest"]
    dir: "AutoMLOps/"
    id: "push_pipeline_runner_svc"
    waitFor: ["build_pipeline_runner_svc"]

  # deploy the cloud run service
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args: ["run",
           "deploy",
           "run-pipeline",
           "--image",
           "us-central1-docker.pkg.dev/automlops-sandbox/vertex-mlops-af/run_pipeline:latest",
           "--region",
           "us-central1",
           "--service-account",
           "vertex-pipelines@automlops-sandbox.iam.gserviceaccount.com",]
    id: "deploy_pipeline_runner_svc"
    waitFor: ["push_pipeline_runner_svc"]

  # Copy runtime parameters
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - '-e'
      - '-c'
      - |
        cp -r AutoMLOps/cloud_run/queueing_svc .
    id: "setup_queueing_svc"
    waitFor: ["deploy_pipeline_runner_svc"]

  # Install dependencies
  - name: python
    entrypoint: pip
    args: ["install", "-r", "queueing_svc/requirements.txt", "--user"]
    id: "install_queueing_svc_deps"
    waitFor: ["setup_queueing_svc"]

  # Submit to queue
  - name: python
    entrypoint: python
    args: ["queueing_svc/main.py", "--setting", "queue_job"]
    id: "submit_job_to_queue"
    waitFor: ["install_queueing_svc_deps"]

  # Create Scheduler Job
  - name: python
    entrypoint: python
    args: ["queueing_svc/main.py", "--setting", "schedule_job"]
    id: "schedule_job"
    waitFor: ["submit_job_to_queue"]

images:
  # custom component images
  - "us-central1-docker.pkg.dev/automlops-sandbox/vertex-mlops-af/components/component_base:latest"
  # Cloud Run image
  - "us-central1-docker.pkg.dev/automlops-sandbox/vertex-mlops-af/run_pipeline:latest"
